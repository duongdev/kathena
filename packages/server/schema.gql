# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Account implements BaseModel {
  id: ID!
  orgId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  username: String!
  email: String!
  displayName: String!
  status: AccountStatus!
  roles: [String!]!
  availability: AccountAvailability!
}

interface BaseModel {
  id: ID!
  orgId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Status of an account."""
enum AccountStatus {
  Pending
  Active
  Deactivated
}

enum AccountAvailability {
  Online
  Offline
  Away
}

type Org implements BaseModel {
  id: ID!
  orgId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  namespace: String!
  name: String!
}

type AuthenticatePayload {
  account: Account!
  org: Org!
  permissions: [Permission!]!
}

enum Permission {
  Hr_Access
  Hr_CreateAccount
  Hr_ListOrgAccounts
  Hr_UpdateOrgAccount
  NoPermission
}

type SignInPayload {
  token: String!
  account: Account!
  org: Org!
  permissions: [Permission!]!
}

type OrgAccountsPayload {
  accounts: [Account!]!
  totalCount: Int!
}

type Query {
  account(id: ID!): Account
  orgAccounts(pageOptions: PageOptionsInput!, orgId: ID!): OrgAccountsPayload!
  authenticate: AuthenticatePayload!
}

input PageOptionsInput {
  skip: Int!
  limit: Int!
}

type Mutation {
  createAccount(input: CreateAccountInput!): Account!
  signIn(
    password: String!

    """Could be username or email"""
    identity: String!
    orgNamespace: String!
  ): SignInPayload!
}

input CreateAccountInput {
  username: String!
  email: String!
  displayName: String!
  roles: [String!]!
}
